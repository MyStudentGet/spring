<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

       xmlns:aop="http://www.springframework.org/schema/aop"

       xsi:schemaLocation="
                    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

<!--    目标对象-->
    <bean id="target" class="com.itheima.aop.Target"/>

<!--    切面对象-->
    <bean id="myAspect" class="com.itheima.aop.MyAspect"/>

<!--    配置织入， 告诉spring框架 哪些方法（切点）需要进行哪些增强（前置、后置）-->
    <aop:config>
        <!--声明切面-->
        <aop:aspect ref="myAspect">
            <!--抽取切点表达式-->
            <aop:pointcut id="myPointcut" expression="execution(* com.itheima.aop.*.*(..))"/>
            
            <!--
                pointcut：切点表达式（语法：execution([修饰符]返回值类型 包名.类名.方法名(参数))）
                    1、访问修饰符可以省略
                    2、返回值类型、包名、类名、方法名可以使用 * 代替（表示任意）
                    3、包名与类名之间一个点 代表当前包下的类，两个点表示当前包及其子包下的类
                    4、参数列表可以使用两个点，表示任意个数的任意类型的参数
            -->
            <!--切面=切点+通知-->
<!--            <aop:before method="before" pointcut="execution(public void com.itheima.aop.Target.save())"/>-->
            <!--前置增强-->
<!--            <aop:before method="before" pointcut="execution(* com.itheima.aop.*.*(..))"/>-->
            <aop:before method="before" pointcut-ref="myPointcut"/>

            <!--后置增强-->
            <aop:after-returning method="afterReturning" pointcut-ref="myPointcut"/>

            <!--环绕增强-->
            <aop:around method="around" pointcut-ref="myPointcut"/>

            <!--异常抛出增强-->
            <aop:after-throwing method="afterThrowing" pointcut-ref="myPointcut"/>

            <!--最终增强-->
            <aop:after method="after" pointcut-ref="myPointcut"/>

        </aop:aspect>
    </aop:config>

</beans>